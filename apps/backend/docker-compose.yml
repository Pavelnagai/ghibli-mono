services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=asdgekvnknrgkwuer
      - POSTGRES_DB=ghibli
      - POSTGRES_HOST=postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ghibli"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: B276RCbvXUK0kPYZyztH
      MINIO_ROOT_PASSWORD: Q8Sdd5Azg3ZXaOIEwDJFcvjp0mKjLQaBksvol7xR
      MINIO_SERVER_URL: https://minio.stylish-images.ru
      MINIO_BROWSER_REDIRECT_URL: https://minio.stylish-images.ru
    command: server /data --console-address ":9001" --address ":9000"
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3

  app:
    build: .
    container_name: backend-app
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asdgekvnknrgkwuer
      POSTGRES_DB: ghibli
      POSTGRES_HOST: postgres
      DB_URL: postgresql://postgres:asdgekvnknrgkwuer@postgres:5432/ghibli
      MINIO_ENDPOINT: minio.stylish-images.ru
      MINIO_PORT: 443
      MINIO_USE_SSL: true
      MINIO_ACCESS_KEY: B276RCbvXUK0kPYZyztH
      MINIO_SECRET_KEY: Q8Sdd5Azg3ZXaOIEwDJFcvjp0mKjLQaBksvol7xR
      MINIO_BUCKETS: images
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres-data:
  minio-data:
